name: Backend CI

on:
  push:
    branches:
      - main
      - production
  workflow_dispatch:

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code  
      uses: actions/checkout@v3

    - name: Setup Node.js  
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Cache node_modules 
      uses: actions/cache@v3
      with:
        path: backend/node_modules  
        key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }} 
        restore-keys: |
          ${{ runner.os }}-backend-

    - name: Install dependencies  
      run: |
        cd backend
        npm ci

    - name: Upload backend artifacts  
      uses: actions/upload-artifact@v4
      with:
        name: backend-build 
        path: |
          backend/  
          backend/node_modules/  

 
  test-backend:
    needs: build-backend  
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code 
      uses: actions/checkout@v3

    - name: Setup Node.js  
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Cache node_modules 
      uses: actions/cache@v3
      with:
        path: backend/node_modules  
        key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }} 
        restore-keys: |
          ${{ runner.os }}-backend-

    - name: Install dependencies  
      run: |
        cd backend
        npm install

    - name: Run tests with coverage  
      run: |
        cd backend
        npm run test:ci

    - name: Upload coverage report  
      uses: actions/upload-artifact@v4
      with:
        name: backend-coverage  
        path: backend/coverage/ 

  dockerize-and-push-dev:
    needs: test-backend
    runs-on: ubuntu-latest
    environment: Development
    if: github.ref == 'refs/heads/main' 

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:dev ./backend
        docker tag ${{ secrets.DOCKER_USERNAME }}/backend:dev ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}

    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/backend:dev
        docker push ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }} 

  # SonarCloud analiza
  sonarcloud-analysis:
    needs: test-backend  
    runs-on: ubuntu-latest
    environment:

      name: Development      
    if: github.ref == 'refs/heads/main' 

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20
        
    - name: Setup Java 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Install dependencies
      run: |
        cd backend
        npm ci

    - name: Collect coverage 
      run: |
        cd backend
        npm run test:ci -- --coverage
      env:
        CI: true

    - name: Upload coverage report
      run: |
        cp backend/coverage/lcov.info .

    - name: Run SonarCloud analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_BACKEND_TOKEN }}
      run: |
        npx sonar-scanner \
          -Dsonar.projectKey=${{ secrets.SONAR_BACKEND_PROJECT_KEY }} \
          -Dsonar.organization=${{ secrets.SONAR_BACKEND_ORGANIZATION_KEY }} \
          -Dsonar.sources=./backend \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

  # Gradnja Docker slike in nalaganje na Docker Hub - Production
  dockerize-and-push-prod:
    needs: [test-backend, sonarcloud-analysis]
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/production' 

    environment:
      name: Production

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Check SonarCloud Quality Gate
      run: |
        curl -u ${{ secrets.SONAR_BACKEND_TOKEN }}: \
          "https://sonarcloud.io/api/project_badges/measure?project=${{ secrets.SONAR_BACKEND_PROJECT_KEY }}&metric=alert_status" | grep -q "OK" || exit 1

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:prod ./backend
        docker tag ${{ secrets.DOCKER_USERNAME }}/backend:prod ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}

    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/backend:prod
        docker push ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}

deploy-backend:
    needs: test-backend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: backend-build
        path: ./build

    - name: Install vercel cli
      run: npm install -g vercel
    
    - name: Deploy to Vercel
      run: |
        vercel deploy --prod --yes --token ${{secrets.VERCEL_BACKEND_TOKEN}}
      env:
        VERCEL_ORG_ID: ${{secrets.VERCEL_ORG_ID}}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_BACKEND_PROJECT_ID}}
        
